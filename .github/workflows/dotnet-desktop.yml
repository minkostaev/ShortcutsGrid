name: .NET Core Desktop

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest  # For a list of available runner types, refer to
    # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Proj_Name: ShortcutsGrid
      Test_Proj_Dir: ShortcutsGrid.Tests

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2

    # Execute all unit tests and collect coverage
    - name: Unit Tests and collect coverage
      run: |
        dotnet test --configuration Release --collect:"XPlat Code Coverage" /p:CollectCoverage=true
        dir

    # Install report generator and setup
    - name: Report generator setup
      run: |
        dotnet tool install --global dotnet-reportgenerator-globaltool --version 4.8.13
        dotnet tool install dotnet-reportgenerator-globaltool --tool-path tools --version 4.8.13
        dotnet new tool-manifest
        dotnet tool install dotnet-reportgenerator-globaltool --version 4.8.13
    #https://danielpalme.github.io/ReportGenerator/usage.html

    # Execute report generator
    - name: Execute report generator
      run: |
        $curDir = Get-Location
        cd ${{ env.Test_Proj_Dir }}
        cd TestResults
        $dirList = Get-ChildItem -Directory -Name -attributes D -Recurse
        cd $dirList
        $nmspc = "${{ env.Proj_Name }}"
        $ExcludeList = "-" + $nmspc + ".App"
        $ExcludeList += ";-ShortcutsGrid.Models.MessageBoxWrapper"
        $ExcludeList += ";-ShortcutsGrid.Services.Run.RunDialog"
        reportgenerator "-reports:coverage.cobertura.xml" "-targetdir:coveragereport" -reporttypes:Badges "-classfilters:$ExcludeList"
        reportgenerator "-reports:coverage.cobertura.xml" "-targetdir:coveragereport" -reporttypes:Html "-classfilters:$ExcludeList"
        cd coveragereport
        copy badge_linecoverage.svg $curDir

    # Upload artifacts in the ations section
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: ${{ env.Test_Proj_Dir }}\\TestResults
        retention-days: 5

    # Git - upload artifact back in the repo
    - name: Git commands
      if: ${{ github.event_name != 'pull_request'}}
      run: |
        git config --global user.email ${{ secrets.MY_EMAIL }}
        git config --global user.name "from workflow"
        git add badge_linecoverage.svg
        git commit -m "add artifact file"
        git push origin $github.ref_name
    # github.ref_name is branch name
